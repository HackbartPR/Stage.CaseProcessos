// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stage.Infrastructure.Persistence;

#nullable disable

namespace Stage.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AreaProcesso", b =>
                {
                    b.Property<int>("AreasId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessosId")
                        .HasColumnType("int");

                    b.HasKey("AreasId", "ProcessosId");

                    b.HasIndex("ProcessosId");

                    b.ToTable("AreaProcesso");
                });

            modelBuilder.Entity("FerramentaProcesso", b =>
                {
                    b.Property<int>("FerramentasId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessosId")
                        .HasColumnType("int");

                    b.HasKey("FerramentasId", "ProcessosId");

                    b.HasIndex("ProcessosId");

                    b.ToTable("FerramentaProcesso");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdResponsible")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdResponsible");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Ferramenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ferramentas");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdParentProccess")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdParentProccess");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AreaProcesso", b =>
                {
                    b.HasOne("Stage.Domain.Entities.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stage.Domain.Entities.Processo", null)
                        .WithMany()
                        .HasForeignKey("ProcessosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FerramentaProcesso", b =>
                {
                    b.HasOne("Stage.Domain.Entities.Ferramenta", null)
                        .WithMany()
                        .HasForeignKey("FerramentasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stage.Domain.Entities.Processo", null)
                        .WithMany()
                        .HasForeignKey("ProcessosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stage.Domain.Entities.Area", b =>
                {
                    b.HasOne("Stage.Domain.Entities.Usuario", "Responsible")
                        .WithMany("Areas")
                        .HasForeignKey("IdResponsible")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Processo", b =>
                {
                    b.HasOne("Stage.Domain.Entities.Processo", "ParentProcess")
                        .WithMany("SubProcessos")
                        .HasForeignKey("IdParentProccess");

                    b.Navigation("ParentProcess");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Processo", b =>
                {
                    b.Navigation("SubProcessos");
                });

            modelBuilder.Entity("Stage.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Areas");
                });
#pragma warning restore 612, 618
        }
    }
}
